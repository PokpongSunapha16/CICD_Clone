services:
  web:
    build: .
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://admin:1234@db:5432/ubonhooper
      NEXT_PUBLIC_API_URL: "http://202.28.49.122:3000"
      NEXTAUTH_URL: "http://202.28.49.122:3000"
      AUTH_TRUST_HOST: true
      JWT_SECRET: "your-secret-key"
      SEED_ON_STARTUP: "true"
  
    depends_on:
      db:
        condition: service_healthy
    restart: always

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: ubonhooper
      PGPORT: 5432
    ports:
      - "5432:5432"
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d ubonhooper || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
    
    volumes:
      - db_data:/var/lib/postgresql/data

volumes:
  db_data:



    # แนะนำให้ปิดพอร์ตภายนอกถ้าเป็น production จริง
    # ports:
    #   - "5432:5432"
    # healthcheck (ถ้าอยากให้ web รอจน db พร้อมจริง ๆ ก่อน start)
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U admin -d ubonhooper || exit 1"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 20
